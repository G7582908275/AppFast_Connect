name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          # Windows - 只支持x64
          - os: windows-latest
            platform: windows
            arch: x64
            target: windows
            kernel: appfast-singbox_windows_amd64.exe
            
          # macOS - 支持x64和arm64
          - os: macos-latest
            platform: macos
            arch: x64
            target: macos
            kernel: appfast-singbox_darwin_amd64
          - os: macos-latest
            platform: macos
            arch: arm64
            target: macos
            kernel: appfast-singbox_darwin_arm64
            
          # Linux - 只支持x64
          - os: ubuntu-latest
            platform: linux
            arch: x64
            target: linux
            kernel: appfast-singbox_linux_amd64

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.0'
          channel: 'stable'
          cache: true

      - name: Force Flutter version
        run: |
          # 确保使用正确的Flutter版本
          flutter --version
          echo "Flutter路径: $(which flutter)"
          echo "Dart路径: $(which dart)"
          echo "环境变量:"
          echo "PATH: $PATH"

      - name: Verify Flutter version
        run: |
          echo "Flutter版本信息："
          flutter --version
          echo
          echo "Dart版本信息："
          dart --version
          echo
          echo "Flutter doctor："
          flutter doctor -v

      - name: Enable desktop platforms
        run: |
          flutter config --enable-windows-desktop
          flutter config --enable-linux-desktop
          flutter config --enable-macos-desktop
          flutter doctor -v

      - name: Setup Java (for Android builds)
        if: matrix.platform == 'android'
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Install dependencies
        run: flutter pub get

      - name: Copy sing-box kernel
        run: |
          # 创建目标目录
          mkdir -p assets/libs
          
          # 复制对应平台的内核文件
          cp sing-box/${{ matrix.kernel }} assets/libs/core
          
          # 在Linux和macOS上设置执行权限
          if [[ "${{ matrix.platform }}" == "linux" || "${{ matrix.platform }}" == "macos" ]]; then
            chmod +x assets/libs/core
          fi

      - name: Build application
        run: |
          # 构建应用
          flutter build ${{ matrix.target }} --release
          
          # 获取版本号
          VERSION=${GITHUB_REF#refs/tags/}
          
          # 如果是Windows，创建zip包
          if [[ "${{ matrix.platform }}" == "windows" ]]; then
            cd build/${{ matrix.target }}/runner/Release
            zip -r ../../../../AppFast_Connect_${VERSION}_${{ matrix.platform }}_${{ matrix.arch }}.zip .
            cd ../../../../
          fi
          
          # 如果是macOS，创建zip包
          if [[ "${{ matrix.platform }}" == "macos" ]]; then
            cd build/${{ matrix.target }}/runner/Release
            zip -r ../../../../AppFast_Connect_${VERSION}_${{ matrix.platform }}_${{ matrix.arch }}.zip .
            cd ../../../../
          fi
          
          # 如果是Linux，创建tar.gz包
          if [[ "${{ matrix.platform }}" == "linux" ]]; then
            cd build/${{ matrix.target }}/runner/Release
            tar -czf ../../../../AppFast_Connect_${VERSION}_${{ matrix.platform }}_${{ matrix.arch }}.tar.gz .
            cd ../../../../
          fi

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: AppFast_Connect_${{ matrix.platform }}_${{ matrix.arch }}
          path: |
            AppFast_Connect_*_${{ matrix.platform }}_${{ matrix.arch }}.zip
            AppFast_Connect_*_${{ matrix.platform }}_${{ matrix.arch }}.tar.gz
          retention-days: 30

  create-release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4

      - name: List downloaded files
        run: |
          echo "下载的文件列表："
          find . -name "*.zip" -o -name "*.tar.gz" | sort

      - name: Create Release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: |
            AppFast_Connect_windows_x64/*.zip
            AppFast_Connect_macos_x64/*.zip
            AppFast_Connect_macos_arm64/*.zip
            AppFast_Connect_linux_x64/*.tar.gz
          draft: false
          prerelease: false
          generate_release_notes: true
          body: |
            ## AppFast Connect 发布版本
            
            ### 支持的平台
            - **Windows**: x64
            - **macOS**: x64, arm64
            - **Linux**: x64
            
            ### 下载说明
            - Windows用户请下载对应的zip文件并解压
            - macOS用户请下载对应的zip文件并解压（x64或arm64）
            - Linux用户请下载对应的tar.gz文件并解压
            
            ### 更新内容
            请查看提交历史了解详细更新内容。
